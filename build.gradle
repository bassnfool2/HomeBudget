/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.1.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.13'
}

javafx {
	version "11.0.2"
	modules = ['javafx.controls', 'javafx.fxml', 'javafx.web', 'javafx.swing']
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

jar {
    manifest {
        attributes(
                'Main-Class': 'org.homebudget.HomeBudgetInit'
        )
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
 }

task fatJar(type: Jar) {
  manifest {
    attributes 'Main-Class': 'org.homebudget.HomeBudgetInit'
  }
  archiveClassifier = "all"
  from {
    configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
  with jar
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    api 'com.google.guava:guava:31.1-jre'
    api 'org.xerial:sqlite-jdbc:3.47.0.0'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
